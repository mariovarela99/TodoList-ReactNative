{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gonca\\\\projectos\\\\FrontEnd\\\\RN\\\\app\\\\App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { AppLoading } from 'expo';\nimport { Container, Text } from 'native-base';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var loadData = function loadData() {\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({\n              Roboto: require('native-base/Fonts/Roboto.ttf'),\n              Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf')\n            }, Ionicons.font)));\n\n          case 2:\n            setIsReady(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadData();\n  }, []);\n  return !isReady ? React.createElement(AppLoading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }) : React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app!\"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gonca/projectos/FrontEnd/RN/app/App.js"],"names":["React","useState","useEffect","AppLoading","Container","Text","Font","Ionicons","App","isReady","setIsReady","loadData","loadAsync","Roboto","require","Roboto_medium","font"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,aAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACcP,QAAQ,CAAC,KAAD,CADtB;AAAA;AAAA,MACTQ,OADS;AAAA,MACAC,UADA;;AAGhB,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTL,IAAI,CAACM,SAAL;AACJC,cAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CADX;AAEJC,cAAAA,aAAa,EAAED,OAAO,CAAC,qCAAD;AAFlB,eAGDP,QAAQ,CAACS,IAHR,EADS;;AAAA;AAMfN,YAAAA,UAAU,CAAC,IAAD,CAAV;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AASAR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACF,OAAD,GACL,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,CAHF;AAOD,CAvBD;;AAyBA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AppLoading } from 'expo';\nimport { Container, Text } from 'native-base';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(false);\n\n  const loadData = async () => {\n    await Font.loadAsync({\n      Roboto: require('native-base/Fonts/Roboto.ttf'),\n      Roboto_medium: require('native-base/Fonts/Roboto_medium.ttf'),\n      ...Ionicons.font,\n    });\n    setIsReady(true);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return !isReady ? (\n    <AppLoading />\n  ) : (\n    <Container>\n      <Text>Open up App.js to start working on your app!</Text>\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}